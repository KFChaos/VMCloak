Image network
=============

It can be useful to give temporary internet access to an image VM to complete image creation.
It might be needed for software activation, for example.

**VMs should only be given internet access temporarily**. Cuckoo 3 has per-task network
routing/forwarding provided by Cuckoo rooter. Any existing network forwarding rules might interfere with this. Make sure all iptables/routing entries
added by/for VMCloak are deleted when VM creation is completed.

..
    .. deprecated:: 0.3

    Since Cuckoo Sandbox 2.0-RC1 better options exist to handle
    per-analysis network routing. Please refer to Cuckoo's official
    documentation to learn more about this.

    By default, and at the moment this is necessary for VMCloak to work, every
    generated Virtual Machine will have a hostonly network adapter. This adapter
    is used to talk to Cuckoo. However, as it is host-only, this does not allow
    the Virtual Machine to reach the internet.

    In case you'd like the Virtual Machine to be able to have full access to the
    internet then that's also possible of course. However, do take into account
    that this indirectly allows **malware to abuse your internet connection**.

    There are multiple approaches to getting networking inside the Virtual
    Machines working - following is the easiest approach. (Other approaches
    include, but are not limited to, a bridged network adapter, a NAT network,
    etc.)

Image internet access
---------------------

In order to setup internet access during VM image software installing/image editing, its traffic must be forwarded.
**This step should only be used to support image creation, not to provide internet access during malware analysis.**


vmcloak-iptables
^^^^^^^^^^^^^^^^

VMCloak is shipped with a simple bash script to help with providing internet access. It intended to forward and
NAT the traffic for 1 VM IP to and from an outgoing(internet facing) interface. The script needs to run in Bash and requires
the 'iptables-save' tool. It also needs to be run as **root**.

All the iptables rules it creates have the ``VMCLOAK_IPTABLES`` comment.

The script is ``vmcloak-iptables``. An example of its help message can be seen below:

.. code-block:: bash

    vmcloak-iptables --help

    Usage: ./vmcloak-iptables [do/undo] [vm_ip] [outgoing interfaces..]
    Example:
      ./vmcloak-iptables do 192.168.30.2 eth0

    'do' applies forwarding and masquerading for the specified IP
    from and to the 'outgoing interface(s)'
    'undo' tries to remove rules that were applied earlier

The script accepts 3 arguments: do/undo, a VM ip, and an outgoing interface to forward to.

**do**

Applies forwarding a masquerade rule for the given IP to and from the outgoing interface.
This will only be performed if the script cannot find any existing VMCloak iptables rules.

Always remove all rules generated by this script when VM creation is completed. Either by using 'undo' or by removing them manually.

.. code-block:: bash

  vmcloak-iptables do 192.168.30.2 eth0

**undo**

Removes rules for the specified VM ip and outgoing interface. Always run this if you have
used this script for internet access.

.. code-block:: bash

  vmcloak-iptables undo 192.168.30.2 eth0

The source for the script:

    .. literalinclude:: ../bin/vmcloak-iptables
        :language: bash

..
    In order to setup full internet access for Virtual Machines the following two
    steps will be taken. **Note that these steps can also be taken after
    generating the Virtual Machines hence magically giving them internet access.**

    * Setup hostonly network interface
    * Run a bash script around iptables(8)

    To start off :ref:`setup a hostonly interface for VirtualBox <vbox-vboxnet0>`.
    Then run the following bash script as **root**. For your convenience it can
    be found on your system by running ``vmcloak-iptables`` (the name of this
    script is subject to change in the future, though.)

    .. literalinclude:: ../bin/vmcloak-iptables
        :language: bash

    That being said setting up full internet access for your Virtual Machines
    boils down to running the following commands:

    .. code-block:: bash

        VBoxManage hostonlyif create
        VBoxManage hostonlyif ipconfig vboxnet0 --ip 192.168.56.1
        sudo vmcloak-iptables
